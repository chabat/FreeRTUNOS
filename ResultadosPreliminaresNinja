-----------------TAREFAS-----------------
Tamanho do TCB de cada tarefa = 41 bytes
Largura da pilha (Tamanho da palavra) = 1 byte
Profundidade mínima da pilha = 100 bytes/palavras
Máximo de tarefas ao mesmo tempo com pilhas de profundidade mínima = 7

1686 bytes for local variables (maximum 2048)

--> 7 TAREFAS, 100B/PILHA:
7 * 100 + 7 * 41 = 987
1676 - 987 = 689 ???

--> 4 TAREFAS, 200B/PILHA:
4 * 200 + 4 * 41 = 964
1676 - 964 = 712 ???


Quantidade de Tarefas | Tamanho Máximo da Pilha (Funcional/Alocável)  | Total de bytes ocupados pelas tarefas (Pilhas + TCBS)
         1            |           1089                                |              1130
         2            |            522                                |              1126
         3            |            333                                |              1122
         4            |            238                                |              1116
         5            |            181                                |              1110
         6            |            144                                |              1110
         7            |            117                                |              1106

Refatoração dos testes de quantidade de tarefas:
Quantidade de Tarefas | Tamanho Máximo da Pilha | Total de bytes ocupados pelas tarefas (Pilhas + TCBS)
         1            |           1292          |              1333
         2            |            623          |              1328
         3            |            400          |              1323
         4            |            289          |              1320
         5            |            222          |              1315
         6            |            177          |              1308
         7            |            146          |              1309
         8            |            122          |              1304
         9            |            103          |              1296

Refatoração dos testes de quantidade de tarefas (No meu computador por que deu diferente):
Quantidade de Tarefas | Tamanho Máximo da Pilha | Total de bytes ocupados pelas tarefas (Pilhas + TCBS)
         1            |           1297          |              1338
         2            |            626          |              1334
         3            |            402          |              1329
         4            |            290          |              1324
         5            |            223          |              1320
         6            |            178          |              1314
         7            |            146          |              1309
         8            |            122          |              1304
         9            |            104          |              1305

Planilha: https://goo.gl/5pdYQw

*Tirando o for para criar as tarefas e a variável inteira iId, consegue-se alocar alguns bytes a mais,
dependendo do número de tarefas, contantes não alteram na quantidade máxima de bytes alocáveis por pilha.

Quantidade de RAM ocupada:
Código sem nada -> 9 bytes
Código com Serial.* -> 184 bytes (+ 175)
Código com \#include <Arduino_FreeRTOS.h> -> 127 bytes (+ 118)
  *Adicionando vTaskStartScheduler(); -> 159 bytes (+32)

Espaço utilizado por variáveis do Arduino: 9
-> timer0_millis: ?(4)                                       = 4
-> timer0_fract: ?(1)                                        = 1
-> timer0_overflow_count: ?(4)                               = 4

S-> Static , V->Volatile
tasks.c: 69
-> V pxCurrentTCB: *TCB_t(2)                                 = 2
-> S pxReadyTasksLists: List_t(9B) * configMAX_PRIORITIES(4) = 36
-> S xDelayedTaskList1: List_t(9B)                           = 9
-> S xDelayedTaskList2: List_t(9B)                           = 9
-> S V pxDelayedTaskList: List_t*(2B)                        = 2
-> S V pxOverflowDelayedTaskList: List_t*(2B)                = 2
-> S xPendingReadyList: List_t(9B)                           = 9
Including VtaskDelete (True): 10
-> S xTasksWaitingTermination: List_t(9B)                    = 9
-> S V uxTasksDeleted: UBaseType_t(1B)                       = 1
Including VtaskSuspend (True): 9
-> S xSuspendedTaskList: List_t(9B)                          = 9
Including xTaskGetIdleTaskHandle (False): 2
-> S xIdleTaskHandle: TaskHandle_t(2B)                       = 2
Other File private variables: 12
-> S V uxCurrentNumberOfTasks: UBaseType_t(1B)               = 1
-> S V xTickCount: TickType_t(2B)                            = 2
-> s V uxTopReadyPriority: UBaseType_t(1B)                   = 1
-> S V xSchedulerRunning: BaseType_t(1B)                     = 1
-> S V uxPendedTicks: UBaseType_t(1B)                        = 1
-> S V xYieldPending: BaseType_t(1B)                         = 1
-> S V xNumOfOverflows: BaseType_t(1B)                       = 1
-> S uxTaskNumber: UBaseType_t(1B)                           = 1
-> S V xNextTaskUnblockTime: TickType_t(2B)                  = 2
-> S V uxSchedulerSuspended: UBaseType_t(1B)                 = 1
Defining configGENERATE_RUN_TIME_STATS as 1 (False): 8
-> S ulTaskSwitchedInTime: uint32_t(4)                       = 4
-> S ulTotalRunTime: uint32_t(4)                             = 4

timers.c (Se estiverem inclusos): 24
-> S xActiveTimerList1: List_t(9B) (OT)                      = 9  -> Só são criadas se os timers forem inicializados (prvCheckForValidListAndQueue)
-> S xActiveTimerList2: List_t(9B) (OT)                      = 9
-> S pxCurrentTimerList: List_t*(2B)                         = 2
-> S pxOverflowTimerList: List_t*(2B)                        = 2
-> S xTimerQueue: QueueHandle_t(2B)                          = 2
Including xTimerGetTimerDaemon<Arduino_FreeRTOS.h>TaskHandle (False):
-> xTimerTaskHandle: TaskHandle_t(2B)                 = 2

Adicionando apenas <Arduino_FreeRTOS.h>:
Variaveis que aparecem na tabela de simbolos: 18
xLastTime                                                    = 2
pxOverflowTimerList                                          = 2
pxCurrentTimerList                                           = 2
xTimerQueue                                                  = 2
__malloc_heap_start                                          = 2
__brkval                                                     = 2
__malloc_heap_end                                            = 2
__flp                                                        = 2
__malloc_margin                                              = 2

Chamando vTaskStartScheduler():
Variaveis que aparecem na tabela de simbolos:
xActiveTimerList1                                            = 9
xActiveTimerList2                                            = 9

Chamando xTaskCreate():
Variaveis que aparecem na tabela de simbolos:
...

Somatorio só com <Arduino_FreeRTOS.h>:
Variaveis do Arduino:                = 9
Globais em tasks.c:                  = 100
Variaveis em timers.c:               = 6
Variaveis da heap3:                  = 10
xLastTime:                           = 2
TOTAL:                               = 127

Funcoes listadas no .elf incluindo apenas <Arduino_FreeRTOS.h>: 29
xTaskGetTickCount
xQueueGenericSend
xTaskGenericCreate
xTaskRemoveFromEventList
xTaskCheckForTimeOut
xTaskResumeAll
xTimerGenericCommand
vPortYieldFromTick
vTaskPlaceOnEventList
vPortFree
vListInsertEnd
vApplicationMallocFailedH
vTaskSuspendAll
vPortYield
vListInsert
prvAddCurrentTaskToDelaye
prvInsertTimerInActiveLis
prvUnlockQueue
prvSwitchTimerLists
prvTimerTask
pvPortMalloc
uxListRemove
memcpy
malloc
memset
main
free
__vector_6
__vector_16

Funcoes adicionais ao incluir "vTaskStartScheduler": 3
prvIdleTask
vListInitialise
vTaskStartScheduler

Relação de quantidades de tarefas com 100B de pilha cada e filas com 5 itens de 4bytes:
Quantidade de Tarefas | Quantidade Máxima de Filas
          1           |             22
          2           |             19
          3           |             16
          4           |             14
          5           |             11
          6           |             8
          7           |             5 /(6?)
          8           |             3
          9+          |             0

Tempo de Troca entre Tarefas (Tempo em microsegundos):

configMAX_PRIORITIES | Onde Cria a Tarefa Auxiliar | Prioridade da Principal | Prioridade da Auxiliar | Divisão por 2 | Tempo
         5           |           Fora              |            5            |           4            |      cima     | 34.65
         4           |           Fora              |            4            |           4            |      cima     | 34.66
         4           |           Fora              |            4            |           3            |   baixo/cima  | 16.91
         4           |           Fora              |            4            |           3            |      baixo    | 16.06  (Timers desativados)
         4           |           Fora              |            4            |           3            |      baixo    | 16.06


Tempo para Troca de mensagens através de filas:
Tamanho da mensagem   |    Tempo em Microsegundos
          1           |             94.55
          10          |             103.51
          50          |             143.52
          100         |             193.66
          250         |             344.47
          500         |             338.66
