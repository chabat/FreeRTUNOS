#### ESTRUTURAS:





#### FUNÇÕES:

(Tasks.c) VtaskStartScheduler{
   Cria a tarefa idle guardando ou não o valor dela, de acordo com a constante INCLUDE_xTaskGetIdleHandle.
   xTaskCreate();{ Retorna pdPASS se a tarefa foi criada corretamente, errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY caso contrário.
   }
   configUSE_TIMERS{ Usada para incluir a funcionalidade de timers de software. 1 para incluir, 0 caso contrário.
   }
   xTimerCreateTimerTask(){ Cria a tarefa daemon que cuida dos timers.
   }
}

--:)


}





**Macros de Tracing: Permitem coleta de dados sobre o comportamento da aplicação durante a execução. Pontos chave do sistema possuem macros vazias
que podem ser redefinidas para prover funcionalidades de tracing. As macros vazias não afetam o funcionamento da aplicação.

#### MAPAS DE FUNÇÕES:

vTaskStartScheduler()
  xTaskCreate() (xTaskGenericCreate)
    configASSERT()
    configASSERT()
    prvAllocateTCBAndStack()
      pvPortMalloc()
        vTaskSuspendAll()
        traceMALLOC()
        xTaskResumeAll()
          configASSERT()
          taskENTER_CRITICAL()
            listLIST_IS_EMPTY()
            listGET_OWNER_OF_HEAD_ENTRY()
            uxListRemove()
              mtCOVERAGE_TEST_DELAY()
              mtCOVERAGE_TEST_MARKER()
              prvAddTaskToReadyList()
                traceMOVED_TASK_TO_READY_STATE()
                taskRECORD_READY_PRIORITY()
                vListInsertEnd()
                  listTEST_LIST_INTEGRITY()
                    configASSERT()
                  listTEST_LIST_ITEM_INTEGRITY()
                    configASSERT()
                  mtCOVERAGE_TEST_DELAY()
