- Não tem timer.

MUTEXES:
- Para testar os mutexes, foi usado um for que chama xSemaphoreTake para cada semáforo.

como eu uso dois semáforos, um para começar a pegar todos os semáforos e outros N semáforos para serem pegos.
O custo em memória total(CT) será pela fórmula:

CT = CPS + CONSTS + COS + TCONSTS;

CPS = Custo do primeiro semáforo.
  63B;
COS = Custo dos outros semáforos.
  63B * MAXV;
CONSTS = Custo das constantes.
  3B -> Constantes (uint8_t);
  1B -> i do setup;
TCONSTS = Custo das variáveis dentro da tarefa.
  2B * MAXT; -> uint8_t;
  12B * MAXT; -> 3 unsigned longs;

Assim sendo, a fórmula pode ser escrita da seguindte maneira:

CT = 67 + 63*MAXV + 14*MAXT;

Isso é a memória usada sem ser considerada a memória alocada para a tarefa.
Para saber, somente soma-se 200.

N. Mutex   | N. Tarefas | Quantidade de Memória | Tempo(useg)
01         |     1      |         144           | 16, 24, 32;
02         |     1      |         207           | 28, 32, 52;
03         |     1      |         270           | 44, 68;
04         |     1      |         333           | 56, 80;
05         |     1      |         396           | 68, 72, 92;
06         |     1      |         459           | 84, 108;
07         |     1      |         522           | 96, 120;
08         |     1      |         585           | 112, 136;
09         |     1      |         648           | 124, 148;
10         |     1      |         711           | 136, 160;
11         |     1      |         774           | 152, 176;
12         |     1      |         837           | 164, 188;
13         |     1      |         900           | 180, 200, 204;
14         |     1      |         963           | 188, 192, 212;
15         |     1      |         1026          | 204, 224;
16         |     1      |         1089          | 220, 240, 244;
17         |     1      |         1152          | 232, 256;
18         |     1      |         1215          | 244, 264, 268;
19         |     1      |         1278          | 256, 260, 284;
20         |     1      |         1341          | 268, 272, 292; <- aqui fica alternando bastante.
21         |     1      |         1404          | 284, 304, 308;
22         |     1      |         1467          | 296, 300, 320;
23         |     1      |         1530          | 308, 312, 332;
24         |     1      |         1593          | 324, 348;
25         |     1      |         1656          | -------------

N. Mutex   | N. Tarefas | Quantidade de Memória | Tempo(useg)
01         |     2      |                       |
02         |     2      |                       |
03         |     2      |                       |
04         |     2      |                       |
05         |     2      |                       |
06         |     2      |                       |
07         |     2      |                       |
08         |     2      |                       |
09         |     2      |                       |
10         |     2      |                       |
11         |     2      |                       |
12         |     2      |                       |
13         |     2      |                       |
14         |     2      |                       |
15         |     2      |                       |
16         |     2      |                       |
17         |     2      |                       |
18         |     2      |                       |
19         |     2      |                       |
20         |     2      |                       |
21         |     2      |                       |
22         |     2      |                       |
23         |     2      |                       |
24         |     2      |                       |
25         |     2      |                       |


- Com um mutex e um for para pegar todos os mutexes, consome 16 microsegundos.
- Dois: 28 microsegundos.
- Três: entre 40 a 44 microsegundos, algumas vezes vai pra 64.
- Quatro: média 60, as vezes 56, as vezes 64.
- Cinco: fica 68, as vezes 72 e 92.
- Seis: 80, 84, 100 e 104.
- dez: 136, 140 e 160.
- treze: 176 e 200.
- catorze: 188 a 216.
- quinze: não suporta.
Cada mutex adicional consome de 12 a 20 microssegundos para ser "pego".

Como cada mutex é uma queue_t e cada queue_t é possui 63B, então cada mutex vai
possuir 63B, o que usariam só 882 bytes. Adicionando o custo de criar uma tarefa
que a suporta, dá uns 1kb.
